[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT 326 Labs and Projects",
    "section": "",
    "text": "Site Information\nWelcome! This site contains code and exercises for the labs in STAT 326 (Mathematical Statistics), information for the mini projects in the course, and information about the final portfolio. While we will also do plenty of handwritten work to help understand concepts, the primary purpose of this site is to hold all of the computing/coding work in one place.",
    "crumbs": [
      "Site Information"
    ]
  },
  {
    "objectID": "samp-dist.html",
    "href": "samp-dist.html",
    "title": "1  Sampling Distributions",
    "section": "",
    "text": "Lab 1.1: Introduction to Statistical Simulation",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sampling Distributions</span>"
    ]
  },
  {
    "objectID": "samp-dist.html#lab-1.1-introduction-to-statistical-simulation",
    "href": "samp-dist.html#lab-1.1-introduction-to-statistical-simulation",
    "title": "1  Sampling Distributions",
    "section": "",
    "text": "Starting a Simulation\nTo begin a simulation for a sampling distribution of a sample statistic, we need to choose:\n\na population model for the simulation. Let’s start with Normal(\\(\\mu\\) = 10, \\(\\sigma^2\\) = 4).\na sample size for the simulation. Let’s start with \\(n\\) = 5.\na calculation for the sample statistic that we are constructing the sampling distribution of. Let’s start with the sample mean, \\(\\bar{y}\\).\nGenerating a Single Sample Statistic\nCarefully look through this code and output to understand the process of generating a single sample from a population and computing a statistic.\nIn the code below, we simulate five observations from a normal population with mean 10 and standard deviation 2. Note that, when you run the code, you should get a different set of 5 numbers than the ones printed below: it is a random sample, after all!\n\nn &lt;- 5       # sample size\nmu &lt;- 10     # population mean\nsigma &lt;- 2   # population standard deviation\n\n# generate a random sample of n observations from a normal population\nsingle_sample &lt;- rnorm(n, mu, sigma) |&gt; round(2)\n# look at the sample\nsingle_sample \n#&gt; [1]  5.75  7.19 11.53 10.17  7.53\n\nNext, we compute the sample mean from this sample: this is our sample statistic we are interested in.\n\n# compute the sample mean\nsample_mean &lt;- mean(single_sample)\n# look at the sample mean\nsample_mean     \n#&gt; [1] 8.434\n\nAgain, your sample mean should be different!\nFinally, we can make a plot of our single sample, along with where the sample mean lies.\n\n# generate a range of values that span the population\nplot_df &lt;- tibble(xvals = seq(mu - 4 * sigma, mu + 4 * sigma, length.out = 500)) |&gt;\n  mutate(xvals_density = dnorm(xvals, mu, sigma))\n\n## plot the population model density curve\nggplot(data = plot_df, aes(x = xvals, y = xvals_density)) +\n  geom_line() +\n  theme_minimal() +\n  ## add the sample points from your sample\n  geom_jitter(data = tibble(single_sample), aes(x = single_sample, y = 0),\n              width = 0, height = 0.005) +\n  ## add a line for the sample mean\n  geom_vline(xintercept = sample_mean, colour = \"red\") +\n  labs(x = \"y\", y = \"density\",\n       title = \"Normal with Mu = 10 and sigma = 2\")\n\n\n\n\n\n\n\nConstructing the Sampling Distribution\nTo simulate the sampling distribution of the sample mean from a normal population with \\(\\mu\\) = 10 and \\(\\sigma\\) = 2 for a sample size of 5, we need to repeat the above steps many, many, many times. We can do so by\n\nWriting a function that computes the sample mean and then\nMapping through that function a large number of times and then\nPlotting the large number of sample means to examine the characteristics of the resulting distribution.\n\nFirst, let’s write the function that will compute the sample mean with a given sample size from a normal population model with a given mean and standard deviation.\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_normal_mean &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_mean &lt;- mean(single_sample)\n  \n  return(sample_mean)\n}\n\n## test function once:\ngenerate_normal_mean(mu = mu, sigma = sigma, n = n)\n#&gt; [1] 9.917306\n\nNext, to generate 5000 sample means, we map through the function:\n\nnsim &lt;- 5000      # number of simulations\n\n## code to map through the function. \n## the \\(i) syntax says to just repeat the generate_normal_mean function\n## nsim times\nmeans &lt;- map_dbl(1:nsim, \\(i) generate_normal_mean(mu = mu, sigma = sigma, n = n))\n\n## print some of the 5000 means\n## each number represents the sample mean from __one__ sample.\nmeans_df &lt;- tibble(means)\nmeans_df\n#&gt; # A tibble: 5,000 × 1\n#&gt;   means\n#&gt;   &lt;dbl&gt;\n#&gt; 1  9.25\n#&gt; 2 10.3 \n#&gt; 3  8.54\n#&gt; 4  7.55\n#&gt; 5  9.56\n#&gt; 6  9.59\n#&gt; # ℹ 4,994 more rows\n\nFinally, we plot the 5000 sample means to see what our sampling distribution of the sample mean (for a sample size of 5) looks like.\n\nggplot(data = means_df, aes(x = means)) +\n  geom_histogram(colour = \"deeppink4\", fill = \"deeppink1\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Means\",\n       title = paste(\"Sampling Distribution of the \\nSample Mean when n =\", n))\n\n\n\n\n\n\n\nWe can also obtain some summary statistics of the sampling distribution of the sample mean when \\(n\\) = 5:\n\nmeans_df |&gt;\n  summarise(mean_samp_dist = mean(means),\n            var_samp_dist = var(means),\n            sd_samp_dist = sd(means))\n#&gt; # A tibble: 1 × 3\n#&gt;   mean_samp_dist var_samp_dist sd_samp_dist\n#&gt;            &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt;\n#&gt; 1           10.0         0.816        0.904\n\nAnd, we can even obtain estimates of the probability that we observe a sample mean larger than 11 by calculating the proportion of our observed sample means that are larger than 11. We can use a similar strategy to estimate the probability that we observe a sample mean less than or equal to 9.5.\n\n# What is the probability that we observe a sample mean larger than 11?\nmeans_df |&gt;\n  mutate(more_than_11 = if_else(means &gt; 11,\n                                true = 1, false = 0)) |&gt;\n  summarise(prob_more_than_11 = mean(more_than_11))\n#&gt; # A tibble: 1 × 1\n#&gt;   prob_more_than_11\n#&gt;               &lt;dbl&gt;\n#&gt; 1             0.126\n\n# What is the probability that we observe a sample mean less than or equal to 9.5?\nmeans_df |&gt;\n  mutate(less_9.5 = if_else(means &lt;= 9.5,\n                            true = 1, false = 0)) |&gt;\n  summarise(prob_less_9.5 = mean(less_9.5))\n#&gt; # A tibble: 1 × 1\n#&gt;   prob_less_9.5\n#&gt;           &lt;dbl&gt;\n#&gt; 1         0.287\n\nExercise 1. Repeat the construction of the sampling distribution of the sample mean several times. How do the results change (or not)?\nExercise 2. Use the result from Stat 325 to report the theoretical distribution of the sample mean. Use this result to find \\(P(\\bar{Y}\\leq 9.5)\\) and \\(P(\\bar{Y}&gt;11)\\) analytically.\nExercise 3. What can we conclude about the sampling distribution of \\(\\bar{y}\\) when taking samples of \\(n = 5\\) from this population? How do the simulation results compare to the result from Stat 325? Use the plot below in your answer to this question.\n\ntheoretical_df &lt;- tibble(xvals = seq(mu - 4 * sigma / sqrt(n),\n                                     mu + 4 * sigma / sqrt(n),\n                                     length.out = 500)) |&gt;\n  mutate(xvals_density = dnorm(xvals, mu, sigma / sqrt(n)))\n\nggplot(data = means_df, aes(x = means)) +\n  geom_histogram(colour = \"deeppink4\", fill = \"deeppink1\", bins = 20,\n                 aes(y = after_stat(density))) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Means\",\n       title = paste(\"Sampling Distribution of the \\nSample Mean when n =\", n)) +\n  geom_line(data = theoretical_df, aes(x = xvals, y = xvals_density))\n\n\n\n\n\n\n\nExercise 4. Increase the sample size to 50 and then reconstruct the sampling distribution of the sample mean for \\(n = 50\\). How do the results (mean, standard deviation, and probabilities) change? Do the changes make sense and do they match the theoretical result from Stat 325?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sampling Distributions</span>"
    ]
  },
  {
    "objectID": "samp-dist.html#lab-1.2-samp.-dist.-with-a-non-normal-population",
    "href": "samp-dist.html#lab-1.2-samp.-dist.-with-a-non-normal-population",
    "title": "1  Sampling Distributions",
    "section": "Lab 1.2: Samp. Dist. with a Non-Normal Population",
    "text": "Lab 1.2: Samp. Dist. with a Non-Normal Population\nNow consider an Exponential(\\(\\lambda\\) = 0.5) population. Go back to a sample size of \\(n = 5\\) and continue calculating the sample mean, \\(\\bar{y}\\). Before beginning, you should make sure to load in the tidyverse library again so that we can make some plots:\n\nlibrary(tidyverse)\n\nThe code below modifies the code from the previous section on a normal population model to reflect the updated exponential population model. Copy the code and run it in your own R session to obtain the graph of the exponential population model with a random sample of \\(n = 5\\) observations.\n\nn &lt;- 5       # sample size\nlambda &lt;- 0.5\nmu &lt;- 1 / lambda   # population mean\nsigma &lt;- sqrt(1 / lambda ^ 2)  # population standard deviation\n\n# generate a random sample of n observations from a normal population\nsingle_sample &lt;- rexp(n, lambda) |&gt; round(2)\n# look at the sample\nsingle_sample \n\n# compute the sample mean\nsample_mean &lt;- mean(single_sample)\n# look at the sample mean\nsample_mean \n\n# generate a range of values that span the population\nplot_df &lt;- tibble(xvals = seq(0, mu + 4 * sigma, length.out = 500)) |&gt;\n  mutate(xvals_density = dexp(xvals, lambda))\n\n## plot the population model density curve\nggplot(data = plot_df, aes(x = xvals, y = xvals_density)) +\n  geom_line() +\n  theme_minimal() +\n  ## add the sample points from your sample\n  geom_jitter(data = tibble(single_sample), aes(x = single_sample, y = 0),\n              width = 0, height = 0.005) +\n  ## add a line for the sample mean\n  geom_vline(xintercept = sample_mean, colour = \"red\") +\n  labs(x = \"y\", y = \"density\",\n       title = \"Exponential with Lambda = 0.5\")\n\nNow that we have an idea of what the population model looks like and we can generate a single sample from this model (along with the sample mean), we can repeat the generation of the sample mean thousands of times to construct the sampling distribution of the sample mean when \\(n = 5\\) for the exponential model.\n\nn &lt;- 5       # sample size\nlambda &lt;- 0.5\nmu &lt;- 1 / lambda   # population mean\nsigma &lt;- sqrt(1 / lambda ^ 2)  # population standard deviation\n\ngenerate_exp_mean &lt;- function(lambda, n) {\n  \n  single_sample &lt;- rexp(n, lambda)\n  sample_mean &lt;- mean(single_sample)\n  \n  return(sample_mean)\n}\n\n## test function once:\ngenerate_exp_mean(lambda = lambda, n = n)\n#&gt; [1] 2.110463\n\nnsim &lt;- 5000      # number of simulations\n\nmeans &lt;- map_dbl(1:nsim, \\(i) generate_exp_mean(lambda = lambda, n = n))\n\n## print some of the 5000 means\n## each number represents the sample mean from __one__ sample.\nmeans_df &lt;- tibble(means)\nmeans_df\n#&gt; # A tibble: 5,000 × 1\n#&gt;   means\n#&gt;   &lt;dbl&gt;\n#&gt; 1  1.82\n#&gt; 2  2.13\n#&gt; 3  2.13\n#&gt; 4  1.37\n#&gt; 5  1.01\n#&gt; 6  1.86\n#&gt; # ℹ 4,994 more rows\n\nggplot(data = means_df, aes(x = means)) +\n  geom_histogram(colour = \"darkolivegreen4\", fill = \"darkolivegreen1\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Means\",\n       title = paste(\"Sampling Distribution of the \\nSample Mean when n =\", n))\n\n\n\n\n\n\n\nExercise 1. In the code that generated the graph for the population model of the exponential distribution, along with the single sample and its mean, I modified the code from the normal distribution population model to examine a single sample from the known population, but for the Exponential population. What are some changes I made and why?\nExercise 2. Now look at the sampling distribution of the sample mean when \\(n = 5\\) for the exponential population model. Summarise what you notice about the sampling distribution of \\(\\bar{y}\\) when taking a sample of size \\(n = 5\\) from an Exponential(\\(\\lambda\\) = 0.5) population.\nExercise 3. Increase the sample size to \\(n = 50\\). What do you notice about the sampling distribution of \\(\\bar{y}\\) now? Why has the shape of the sampling distribution changed?\nExercise 4. In general, what are some other ways you could summarise a sample of data? (i.e., other calculations you could do?)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sampling Distributions</span>"
    ]
  },
  {
    "objectID": "samp-dist.html#lab-1.3-samp.-dist.-of-the-sample-minimum",
    "href": "samp-dist.html#lab-1.3-samp.-dist.-of-the-sample-minimum",
    "title": "1  Sampling Distributions",
    "section": "Lab 1.3: Samp. Dist. of the Sample Minimum",
    "text": "Lab 1.3: Samp. Dist. of the Sample Minimum\nAgain, load in the tidyverse library so that we can make some plots!\n\nlibrary(tidyverse)\n\nLet’s return to our original Normal(\\(\\mu\\) = 10, \\(\\sigma^2\\) = 4), but let’s consider a different statistic: the sample minimum. Examine the code that you ran in an earlier lab below.\n\nn &lt;- 5       # sample size\nmu &lt;- 10     # population mean\nsigma &lt;- 2   # population standard deviation\n\n# generate a random sample of n observations from a normal population\nsingle_sample &lt;- rnorm(n, mu, sigma) |&gt; round(2)\n# look at the sample\nsingle_sample \n\n# compute the sample mean\nsample_mean &lt;- mean(single_sample)\n# look at the sample mean\nsample_mean   \n\n# generate a range of values that span the population\nplot_df &lt;- tibble(xvals = seq(mu - 4 * sigma, mu + 4 * sigma, length.out = 500)) |&gt;\n  mutate(xvals_density = dnorm(xvals, mu, sigma))\n\n## plot the population model density curve\nggplot(data = plot_df, aes(x = xvals, y = xvals_density)) +\n  geom_line() +\n  theme_minimal() +\n  ## add the sample points from your sample\n  geom_jitter(data = tibble(single_sample), aes(x = single_sample, y = 0),\n              width = 0, height = 0.005) +\n  ## add a line for the sample mean\n  geom_vline(xintercept = sample_mean, colour = \"red\") +\n  labs(x = \"y\", y = \"density\",\n       title = \"Normal with Mu = 10 and sigma = 2\")\n\nExercise 1. Modify the code so that, instead of calculating the sample mean as the sample statistic, you calculate the sample minimum as the sample statistic. Then, re-run the code so that you better understand what the sampling distribution of the sample minimum might look like.\nExercise 2. Predict what might happen next! That is, based on what you’ve seen by re-running the code above, where do you expect the center of the sampling distribution of the sample minimum to be relative to 10? Do you expect the sampling distribution of the sample minimum to overlap with the value 10 at all (if \\(n = 5\\)).\nExercise 3. Modify the code below so that you generate the sampling distribution of the sample minimum instead of the sample mean.\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_samp_mean &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_mean &lt;- mean(single_sample)\n  \n  return(sample_mean)\n}\n\n## test function once:\ngenerate_samp_mean(mu = mu, sigma = sigma, n = n)\n\nnsim &lt;- 5000      # number of simulations\n\n## code to map through the function. \n## the \\(i) syntax says to just repeat the generate_samp_mean function\n## nsim times\nmeans &lt;- map_dbl(1:nsim, \\(i) generate_samp_mean(mu = mu, sigma = sigma, n = n))\n\n## print some of the 5000 means\n## each number represents the sample mean from __one__ sample.\nmeans_df &lt;- tibble(means)\nmeans_df\n\nggplot(data = means_df, aes(x = means)) +\n  geom_histogram(colour = \"deeppink4\", fill = \"deeppink1\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Means\",\n       title = paste(\"Sampling Distribution of the \\nSample Mean when n =\", n))\n\nmeans_df |&gt;\n  summarise(mean_samp_dist = mean(means),\n            var_samp_dist = var(means),\n            sd_samp_dist = sd(means))\n\nmeans_df |&gt;\n  mutate(more_than_11 = if_else(means &gt; 11,\n                                true = 1, false = 0)) |&gt;\n  summarise(prob_more_than_11 = mean(more_than_11))\n\nmeans_df |&gt;\n  mutate(less_9.5 = if_else(means &lt;= 9.5,\n                            true = 1, false = 0)) |&gt;\n  summarise(prob_less_9.5 = mean(less_9.5))\n\nExercise 4. Summarise what you notice about the sampling distribution. How does it compare to the sampling distribution of the sample mean? Does that make sense? Why or why not?\nExercise 5. Report the probability that the sample minimum is less than or equal to 9.5. How does it compare to the probability that the sample mean is less than or equal to 9.5? Does that make sense? Why or why not?\nExercise 6. Increase the sample size to 50. Summarize how the sampling distribution of the sample minimum when \\(n = 50\\) differs from when \\(n = 5\\).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sampling Distributions</span>"
    ]
  },
  {
    "objectID": "samp-dist.html#mini-project-1-sampling-distribution-of-the-sample-minimum-and-maximum",
    "href": "samp-dist.html#mini-project-1-sampling-distribution-of-the-sample-minimum-and-maximum",
    "title": "1  Sampling Distributions",
    "section": "Mini Project 1: Sampling Distribution of the Sample Minimum and Maximum",
    "text": "Mini Project 1: Sampling Distribution of the Sample Minimum and Maximum\nOn our second day of class, we conducted a simulation to investigate the sampling distribution of the sample minimum (\\(Y_{min}\\)) when taking samples of \\(n = 5\\) observations from a Normal(\\(\\mu = 10, \\sigma^2 = 4\\)) population. For your recap of that day, you investigated the sampling distribution of the sample maximum (\\(Y_{max}\\)) from the same population (using the same sample size).\nMany of you noticed that, in this situation, SE(\\(Y_{min} \\approx\\) SE(\\(Y_{max}\\)), and many of you provided great explanations of why you thought that was true. The purpose of this mini-project assignment is for you to investigate this phenomenon to see if it is a result that holds more generally.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Sampling Distributions</span>"
    ]
  },
  {
    "objectID": "estimation.html",
    "href": "estimation.html",
    "title": "2  Estimation",
    "section": "",
    "text": "Lab 2.1: Maximum Likelihood Estimation",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Estimation</span>"
    ]
  },
  {
    "objectID": "estimation.html#lab-2.2-consistency",
    "href": "estimation.html#lab-2.2-consistency",
    "title": "2  Estimation",
    "section": "Lab 2.2: Consistency",
    "text": "Lab 2.2: Consistency",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Estimation</span>"
    ]
  },
  {
    "objectID": "estimation.html#mini-project-2-a-meaningful-story",
    "href": "estimation.html#mini-project-2-a-meaningful-story",
    "title": "2  Estimation",
    "section": "Mini Project 2: A Meaningful Story",
    "text": "Mini Project 2: A Meaningful Story",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Estimation</span>"
    ]
  },
  {
    "objectID": "conf-int.html",
    "href": "conf-int.html",
    "title": "3  Confidence Intervals",
    "section": "",
    "text": "Lab 3.1: Introduction to Interval Estimation",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Confidence Intervals</span>"
    ]
  },
  {
    "objectID": "conf-int.html#lab-3.2-conceptual-confidence-intervals",
    "href": "conf-int.html#lab-3.2-conceptual-confidence-intervals",
    "title": "3  Confidence Intervals",
    "section": "Lab 3.2: Conceptual Confidence Intervals",
    "text": "Lab 3.2: Conceptual Confidence Intervals",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Confidence Intervals</span>"
    ]
  },
  {
    "objectID": "conf-int.html#lab-3.3-bootstrap-confidence-intervals",
    "href": "conf-int.html#lab-3.3-bootstrap-confidence-intervals",
    "title": "3  Confidence Intervals",
    "section": "Lab 3.3: Bootstrap Confidence Intervals",
    "text": "Lab 3.3: Bootstrap Confidence Intervals",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Confidence Intervals</span>"
    ]
  },
  {
    "objectID": "conf-int.html#mini-project-3-simulation-to-investigate-confidence-interval-conditions",
    "href": "conf-int.html#mini-project-3-simulation-to-investigate-confidence-interval-conditions",
    "title": "3  Confidence Intervals",
    "section": "Mini Project 3: Simulation to Investigate Confidence Interval Conditions",
    "text": "Mini Project 3: Simulation to Investigate Confidence Interval Conditions",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Confidence Intervals</span>"
    ]
  },
  {
    "objectID": "bayesian.html",
    "href": "bayesian.html",
    "title": "4  Bayesian Statistics",
    "section": "",
    "text": "Lab 4.1: Bayesian with Non-Informative Priors",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bayesian Statistics</span>"
    ]
  },
  {
    "objectID": "bayesian.html#lab-4.2-bayesian-with-informative-priors",
    "href": "bayesian.html#lab-4.2-bayesian-with-informative-priors",
    "title": "4  Bayesian Statistics",
    "section": "Lab 4.2: Bayesian with Informative Priors",
    "text": "Lab 4.2: Bayesian with Informative Priors",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bayesian Statistics</span>"
    ]
  },
  {
    "objectID": "bayesian.html#mini-project-4-bayesian-analysis",
    "href": "bayesian.html#mini-project-4-bayesian-analysis",
    "title": "4  Bayesian Statistics",
    "section": "Mini Project 4: Bayesian Analysis",
    "text": "Mini Project 4: Bayesian Analysis\n(use animal abundance data with two priors: a non-informative gamma prior and an informative gamma prior based on abundance survey in the previous year).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Bayesian Statistics</span>"
    ]
  },
  {
    "objectID": "hyp-test.html",
    "href": "hyp-test.html",
    "title": "5  Hypothesis Testing",
    "section": "",
    "text": "Lab 5.1: Permutation Tests",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Hypothesis Testing</span>"
    ]
  },
  {
    "objectID": "hyp-test.html#mini-project-5-advantages-and-drawbacks-of-using-p-values",
    "href": "hyp-test.html#mini-project-5-advantages-and-drawbacks-of-using-p-values",
    "title": "5  Hypothesis Testing",
    "section": "Mini Project 5: Advantages and Drawbacks of Using p-values",
    "text": "Mini Project 5: Advantages and Drawbacks of Using p-values\nSee article from The American Statistician. To make room for the bayesian project, perhaps move this to the final portfolio and cut the TAS part of the final portfolio.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Hypothesis Testing</span>"
    ]
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "6  Portfolio",
    "section": "",
    "text": "Information about the final portfolio will be added here.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Portfolio</span>"
    ]
  }
]